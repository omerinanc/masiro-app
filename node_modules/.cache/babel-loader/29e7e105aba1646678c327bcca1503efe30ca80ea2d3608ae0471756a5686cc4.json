{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\inanc\\\\Documents\\\\GitHub\\\\omerinanc.github.io\\\\masiro\\\\src\\\\components\\\\auth\\\\profile.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userPosts: []\n    };\n  }\n  componentDidMount() {\n    // Fetch user-specific posts based on the provided token\n    this.fetchUserPosts();\n  }\n  fetchUserPosts() {\n    const {\n      token\n    } = this.props;\n    if (token) {\n      // Make an API request to get user-specific posts\n      axios.get(\"http://localhost:3001/api/posts\") // Replace with your API endpoint\n      .then(response => {\n        // Group posts by user\n        const userPosts = {};\n        response.data.forEach(post => {\n          const userId = post.user.id;\n          console.log(\"userId:\", userId);\n          if (!userPosts[userId]) {\n            userPosts[userId] = {\n              user: post.user,\n              posts: []\n            };\n          }\n          postsByUser[userId].posts.push(post);\n        });\n        this.setState({\n          postsByUser\n        });\n      }).catch(error => {\n        console.error(\"Error fetching posts:\", error);\n      });\n    }\n  }\n  render() {\n    const {\n      userPosts\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-posts\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Posts:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: userPosts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"user-post\",\n              children: post.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"post-date\",\n              children: post.created_at\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)]\n          }, post.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","axios","jsxDEV","_jsxDEV","Profile","constructor","props","state","userPosts","componentDidMount","fetchUserPosts","token","get","then","response","data","forEach","post","userId","user","id","console","log","posts","postsByUser","push","setState","catch","error","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","content","created_at"],"sources":["C:/Users/inanc/Documents/GitHub/omerinanc.github.io/masiro/src/components/auth/profile.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userPosts: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Fetch user-specific posts based on the provided token\r\n    this.fetchUserPosts();\r\n  }\r\n\r\n  fetchUserPosts() {\r\n    const { token } = this.props;\r\n\r\n    if (token) {\r\n      // Make an API request to get user-specific posts\r\n      axios\r\n        .get(\"http://localhost:3001/api/posts\") // Replace with your API endpoint\r\n        .then((response) => {\r\n          // Group posts by user\r\n          const userPosts = {};\r\n          response.data.forEach((post) => {\r\n            const userId = post.user.id;\r\n            console.log(\"userId:\", userId);\r\n\r\n            if (!userPosts[userId]) {\r\n              userPosts[userId] = {\r\n                user: post.user,\r\n                posts: [],\r\n              };\r\n            }\r\n\r\n            postsByUser[userId].posts.push(post);\r\n          });\r\n\r\n          this.setState({ postsByUser });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching posts:\", error);\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { userPosts } = this.state;\r\n\r\n    return (\r\n      <div className=\"profile-container\">\r\n        <h1>Profile</h1>\r\n        <div className=\"user-posts\">\r\n          <h2>Your Posts:</h2>\r\n          <ul>\r\n            {userPosts.map((post) => (\r\n              <div className=\"post-container\" key={post.id}>\r\n                <p className=\"user-post\">{post.content}</p>\r\n                <p className=\"post-date\">{post.created_at}</p>\r\n              </div>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,MAAMC,OAAO,SAASJ,SAAS,CAAC;EAC7CK,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACXC,SAAS,EAAE;IACb,CAAC;EACH;EAEAC,iBAAiBA,CAAA,EAAG;IAClB;IACA,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB;EAEAA,cAAcA,CAAA,EAAG;IACf,MAAM;MAAEC;IAAM,CAAC,GAAG,IAAI,CAACL,KAAK;IAE5B,IAAIK,KAAK,EAAE;MACT;MACAV,KAAK,CACFW,GAAG,CAAC,iCAAiC,CAAC,CAAC;MAAA,CACvCC,IAAI,CAAEC,QAAQ,IAAK;QAClB;QACA,MAAMN,SAAS,GAAG,CAAC,CAAC;QACpBM,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAEC,IAAI,IAAK;UAC9B,MAAMC,MAAM,GAAGD,IAAI,CAACE,IAAI,CAACC,EAAE;UAC3BC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEJ,MAAM,CAAC;UAE9B,IAAI,CAACV,SAAS,CAACU,MAAM,CAAC,EAAE;YACtBV,SAAS,CAACU,MAAM,CAAC,GAAG;cAClBC,IAAI,EAAEF,IAAI,CAACE,IAAI;cACfI,KAAK,EAAE;YACT,CAAC;UACH;UAEAC,WAAW,CAACN,MAAM,CAAC,CAACK,KAAK,CAACE,IAAI,CAACR,IAAI,CAAC;QACtC,CAAC,CAAC;QAEF,IAAI,CAACS,QAAQ,CAAC;UAAEF;QAAY,CAAC,CAAC;MAChC,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;QAChBP,OAAO,CAACO,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,CAAC;IACN;EACF;EAEAC,MAAMA,CAAA,EAAG;IACP,MAAM;MAAErB;IAAU,CAAC,GAAG,IAAI,CAACD,KAAK;IAEhC,oBACEJ,OAAA;MAAK2B,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChC5B,OAAA;QAAA4B,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChBhC,OAAA;QAAK2B,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB5B,OAAA;UAAA4B,QAAA,EAAI;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpBhC,OAAA;UAAA4B,QAAA,EACGvB,SAAS,CAAC4B,GAAG,CAAEnB,IAAI,iBAClBd,OAAA;YAAK2B,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7B5B,OAAA;cAAG2B,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAEd,IAAI,CAACoB;YAAO;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC3ChC,OAAA;cAAG2B,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAEd,IAAI,CAACqB;YAAU;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GAFXlB,IAAI,CAACG,EAAE;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGvC,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}