{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\inanc\\\\Documents\\\\GitHub\\\\omerinanc.github.io\\\\masiro\\\\src\\\\components\\\\auth\\\\profile.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userPosts: [],\n      userId: null\n    };\n  }\n  componentDidMount() {\n    this.fetchUserPosts();\n    this.checkUserId();\n  }\n  checkUserId(event) {\n    event.preventDefault();\n    const {\n      email,\n      password\n    } = this.state;\n    console.log(\"Logging in with:\", email, password);\n    axios.post(\"http://localhost:3001/sessions\", {\n      user: {\n        email: email,\n        password: password\n      }\n    }, {\n      withCredentials: true\n    }).then(response => {\n      console.log(\"Login response:\", response.data);\n      const loggedInUserId = response.data.user.id;\n      console.log(loggedInUserId);\n    }).catch(error => {\n      console.log(\"Login error\", error);\n      this.setState({\n        loginError: \"An error occurred during login. Please try again.\"\n      });\n    });\n  }\n  fetchUserPosts() {\n    const {\n      token\n    } = this.props;\n    if (token) {\n      axios.get(\"http://localhost:3001/api/posts\") // Replace with your API endpoint\n      .then(response => {\n        const loggedInUserId = response.userId;\n        console.log(token);\n        console.log(\"logged in userid\", loggedInUserId);\n        // Filter posts to get only the ones belonging to the logged-in user\n        const userPosts = response.data.filter(post => post.user_id === loggedInUserId);\n        this.setState({\n          userPosts\n        });\n      }).catch(error => {\n        console.error(\"Error fetching user posts:\", error);\n      });\n    }\n  }\n  render() {\n    const {\n      userPosts\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-posts\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Posts:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: userPosts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `post-container post-${post.user.id}-${post.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"user-post\",\n              children: post.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","axios","jsxDEV","_jsxDEV","Profile","constructor","props","state","userPosts","userId","componentDidMount","fetchUserPosts","checkUserId","event","preventDefault","email","password","console","log","post","user","withCredentials","then","response","data","loggedInUserId","id","catch","error","setState","loginError","token","get","filter","user_id","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","content"],"sources":["C:/Users/inanc/Documents/GitHub/omerinanc.github.io/masiro/src/components/auth/profile.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userPosts: [],\r\n      userId: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUserPosts();\r\n    this.checkUserId();\r\n  }\r\n  checkUserId(event) {\r\n    event.preventDefault();\r\n    const { email, password } = this.state;\r\n    console.log(\"Logging in with:\", email, password);\r\n\r\n    axios\r\n      .post(\r\n        \"http://localhost:3001/sessions\",\r\n        {\r\n          user: {\r\n            email: email,\r\n            password: password,\r\n          },\r\n        },\r\n        {\r\n          withCredentials: true,\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(\"Login response:\", response.data);\r\n        const loggedInUserId = response.data.user.id;\r\n        console.log(loggedInUserId);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Login error\", error);\r\n        this.setState({\r\n          loginError: \"An error occurred during login. Please try again.\",\r\n        });\r\n      });\r\n  }\r\n\r\n  fetchUserPosts() {\r\n    const { token } = this.props;\r\n\r\n    if (token) {\r\n      axios\r\n        .get(\"http://localhost:3001/api/posts\") // Replace with your API endpoint\r\n        .then((response) => {\r\n          const loggedInUserId = response.userId;\r\n          console.log(token);\r\n          console.log(\"logged in userid\", loggedInUserId);\r\n          // Filter posts to get only the ones belonging to the logged-in user\r\n          const userPosts = response.data.filter(\r\n            (post) => post.user_id === loggedInUserId\r\n          );\r\n\r\n          this.setState({ userPosts });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching user posts:\", error);\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { userPosts } = this.state;\r\n\r\n    return (\r\n      <div className=\"profile-container\">\r\n        <h1>Profile</h1>\r\n        <div className=\"user-posts\">\r\n          <h2>Your Posts:</h2>\r\n          <ul>\r\n            {userPosts.map((post) => (\r\n              <div\r\n                className={`post-container post-${post.user.id}-${post.id}`}\r\n                key={post.id}\r\n              >\r\n                <p className=\"user-post\">{post.content}</p>\r\n              </div>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}