{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\inanc\\\\Documents\\\\GitHub\\\\omerinanc.github.io\\\\masiro\\\\src\\\\components\\\\auth\\\\profile.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userPosts: [],\n      userId: null\n    };\n  }\n  componentDidMount() {\n    console.log(\"props:\", this.props);\n    const userData = this.props.userData;\n    console.log(\"userData:\", userData);\n    if (userData) {\n      const loggedInUserId = userData.id; // Access the user ID from the user data\n      console.log(\"Logged-in User ID:\", loggedInUserId);\n      this.fetchUserPosts(loggedInUserId); // Fetch user posts using the ID\n    }\n  }\n\n  fetchUserPosts() {\n    const {\n      token\n    } = this.props;\n    if (token) {\n      axios.get(\"http://localhost:3001/api/posts\") // Replace with your API endpoint\n      .then(response => {\n        const loggedInUserId = response.userId;\n        console.log(token);\n        console.log(\"logged in userid\", loggedInUserId);\n        // Filter posts to get only the ones belonging to the logged-in user\n        const userPosts = response.data.filter(post => post.user_id === loggedInUserId);\n        this.setState({\n          userPosts\n        });\n      }).catch(error => {\n        console.error(\"Error fetching user posts:\", error);\n      });\n    }\n  }\n  render() {\n    const {\n      userPosts\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-posts\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Posts:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: userPosts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `post-container post-${post.user.id}-${post.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"user-post\",\n              children: post.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","axios","jsxDEV","_jsxDEV","Profile","constructor","props","state","userPosts","userId","componentDidMount","console","log","userData","loggedInUserId","id","fetchUserPosts","token","get","then","response","data","filter","post","user_id","setState","catch","error","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","content"],"sources":["C:/Users/inanc/Documents/GitHub/omerinanc.github.io/masiro/src/components/auth/profile.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userPosts: [],\r\n      userId: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"props:\", this.props);\r\n\r\n    const userData = this.props.userData;\r\n    console.log(\"userData:\", userData);\r\n    if (userData) {\r\n      const loggedInUserId = userData.id; // Access the user ID from the user data\r\n      console.log(\"Logged-in User ID:\", loggedInUserId);\r\n      this.fetchUserPosts(loggedInUserId); // Fetch user posts using the ID\r\n    }\r\n  }\r\n\r\n  fetchUserPosts() {\r\n    const { token } = this.props;\r\n\r\n    if (token) {\r\n      axios\r\n        .get(\"http://localhost:3001/api/posts\") // Replace with your API endpoint\r\n        .then((response) => {\r\n          const loggedInUserId = response.userId;\r\n          console.log(token);\r\n          console.log(\"logged in userid\", loggedInUserId);\r\n          // Filter posts to get only the ones belonging to the logged-in user\r\n          const userPosts = response.data.filter(\r\n            (post) => post.user_id === loggedInUserId\r\n          );\r\n\r\n          this.setState({ userPosts });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching user posts:\", error);\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { userPosts } = this.state;\r\n\r\n    return (\r\n      <div className=\"profile-container\">\r\n        <h1>Profile</h1>\r\n        <div className=\"user-posts\">\r\n          <h2>Your Posts:</h2>\r\n          <ul>\r\n            {userPosts.map((post) => (\r\n              <div\r\n                className={`post-container post-${post.user.id}-${post.id}`}\r\n                key={post.id}\r\n              >\r\n                <p className=\"user-post\">{post.content}</p>\r\n              </div>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}