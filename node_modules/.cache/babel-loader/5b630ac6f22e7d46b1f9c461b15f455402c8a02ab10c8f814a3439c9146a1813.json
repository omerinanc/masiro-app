{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\inanc\\\\Documents\\\\GitHub\\\\omerinanc.github.io\\\\masiro\\\\src\\\\components\\\\auth\\\\profile.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.handlePostContentChange = e => {\n      this.setState({\n        postContent: e.target.value\n      });\n    };\n    this.state = {\n      loggedInStatus: \"You are not logged in.\",\n      userPosts: {},\n      userId: null // Initialize userId\n    };\n  }\n\n  componentDidMount() {\n    const {\n      token\n    } = this.props;\n    if (token) {\n      // Decode the JWT token to extract user information\n      const decodedToken = this.decodeJwtToken(token);\n      if (decodedToken) {\n        // Assuming the token contains a field like 'userId'\n        const userId = decodedToken.userId;\n\n        // Now that you have the user ID, you can fetch user-specific data\n        this.fetchUserPosts(userId);\n      }\n    }\n  }\n  fetchUserPosts() {\n    // Modify the URL to include the user ID as a query parameter\n    axios.get(\"http://localhost:3001/api/posts\", {\n      headers: {\n        Authorization: `Bearer ${this.props.token}` // Pass the token in the header\n      }\n    }).then(response => {\n      console.log(\"Response data:\", response.data); // Log the API response data\n\n      const userPosts = response.data;\n      response.data.forEach(post => {\n        const userId = post.user.id;\n        console.log(\"userId:\", userId); // Add this line\n        console.log(\"userPosts:\", userPosts); // Add this line\n\n        if (!userPosts[userId]) {\n          userPosts[userId] = {\n            user: post.user,\n            posts: []\n          };\n        }\n        userPosts[userId].posts.push(post);\n      });\n      this.setState({\n        userPosts\n      });\n    }).catch(error => {\n      console.error(\"Error fetching user posts:\", error);\n    });\n  }\n  render() {\n    const {\n      userPosts\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-posts\",\n        children: Object.entries(userPosts).map(([userId, userData]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-post-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"user-name-header\",\n            children: [\"User \", userId, \"'s Posts:\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: userData.posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `post-container post-${userData.user.id}-${post.id}`,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"user-post\",\n                children: post.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this)\n            }, post.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, userId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","axios","jsxDEV","_jsxDEV","Profile","constructor","props","handlePostContentChange","e","setState","postContent","target","value","state","loggedInStatus","userPosts","userId","componentDidMount","token","decodedToken","decodeJwtToken","fetchUserPosts","get","headers","Authorization","then","response","console","log","data","forEach","post","user","id","posts","push","catch","error","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","userData","content"],"sources":["C:/Users/inanc/Documents/GitHub/omerinanc.github.io/masiro/src/components/auth/profile.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loggedInStatus: \"You are not logged in.\",\r\n      userPosts: {},\r\n      userId: null, // Initialize userId\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { token } = this.props;\r\n    if (token) {\r\n      // Decode the JWT token to extract user information\r\n      const decodedToken = this.decodeJwtToken(token);\r\n\r\n      if (decodedToken) {\r\n        // Assuming the token contains a field like 'userId'\r\n        const userId = decodedToken.userId;\r\n\r\n        // Now that you have the user ID, you can fetch user-specific data\r\n        this.fetchUserPosts(userId);\r\n      }\r\n    }\r\n  }\r\n\r\n  fetchUserPosts() {\r\n    // Modify the URL to include the user ID as a query parameter\r\n    axios\r\n      .get(\"http://localhost:3001/api/posts\", {\r\n        headers: {\r\n          Authorization: `Bearer ${this.props.token}`, // Pass the token in the header\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(\"Response data:\", response.data); // Log the API response data\r\n\r\n        const userPosts = response.data;\r\n        response.data.forEach((post) => {\r\n          const userId = post.user.id;\r\n          console.log(\"userId:\", userId); // Add this line\r\n          console.log(\"userPosts:\", userPosts); // Add this line\r\n\r\n          if (!userPosts[userId]) {\r\n            userPosts[userId] = {\r\n              user: post.user,\r\n              posts: [],\r\n            };\r\n          }\r\n\r\n          userPosts[userId].posts.push(post);\r\n        });\r\n        this.setState({ userPosts });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching user posts:\", error);\r\n      });\r\n  }\r\n  handlePostContentChange = (e) => {\r\n    this.setState({ postContent: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { userPosts } = this.state;\r\n\r\n    return (\r\n      <div className=\"profile-container\">\r\n        <h1>Profile</h1>\r\n        <div className=\"user-posts\">\r\n          {Object.entries(userPosts).map(([userId, userData]) => (\r\n            <div className=\"user-post-container\" key={userId}>\r\n              <h2 className=\"user-name-header\">User {userId}'s Posts:</h2>\r\n              <ul>\r\n                {userData.posts.map((post) => (\r\n                  <div\r\n                    className={`post-container post-${userData.user.id}-${post.id}`}\r\n                    key={post.id}\r\n                  >\r\n                    <p className=\"user-post\">{post.content}</p>\r\n                  </div>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}