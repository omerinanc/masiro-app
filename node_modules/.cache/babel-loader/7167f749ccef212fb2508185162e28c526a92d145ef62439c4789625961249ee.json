{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\inanc\\\\Documents\\\\GitHub\\\\omerinanc.github.io\\\\masiro\\\\src\\\\components\\\\auth\\\\profile.js\";\n// profile.js\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      // Initialize as null\n      userPosts: [] // Initialize as an empty array\n    };\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\"); // Retrieve the token from localStorage\n\n    if (token) {\n      // Set up the headers with the Bearer token\n      const headers = {\n        Authorization: `Bearer ${token}`\n      };\n\n      // Make the API request with the headers\n      axios.get(\"http://localhost:3001/api/profile\", {\n        headers\n      }).then(response => {\n        // Handle the response and set the user data in the state\n        this.setState({\n          user: response.data\n        });\n        axios.get(\"http://localhost:3001/api/posts\", {\n          headers\n        }).then(postsResponse => {\n          // Filter posts to get only the user's posts\n          const userPosts = postsResponse.data.filter(post => post.user.id === response.data.user_id);\n          this.setState({\n            userPosts\n          });\n        }).catch(error => {\n          console.error(\"Error fetching user's posts:\", error);\n        });\n      }).catch(error => {\n        // Handle any errors, e.g., unauthorized (401)\n        console.error(\"Error fetching user profile:\", error);\n      });\n    } else {\n      // Handle the case where no token is available\n      console.error(\"No token available. User is not authenticated.\");\n    }\n  }\n  render() {\n    const {\n      user,\n      userPosts\n    } = this.state;\n    if (!user) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 14\n      }, this); // Render a loading message while fetching the profile\n    }\n\n    // Render the user profile information\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: userPosts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: post.content\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","axios","jsxDEV","_jsxDEV","Profile","constructor","props","state","user","userPosts","componentDidMount","token","localStorage","getItem","headers","Authorization","get","then","response","setState","data","postsResponse","filter","post","id","user_id","catch","error","console","render","children","fileName","_jsxFileName","lineNumber","columnNumber","name","email","map","content"],"sources":["C:/Users/inanc/Documents/GitHub/omerinanc.github.io/masiro/src/components/auth/profile.js"],"sourcesContent":["// profile.js\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      user: null, // Initialize as null\r\n      userPosts: [], // Initialize as an empty array\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem(\"token\"); // Retrieve the token from localStorage\r\n\r\n    if (token) {\r\n      // Set up the headers with the Bearer token\r\n      const headers = {\r\n        Authorization: `Bearer ${token}`,\r\n      };\r\n\r\n      // Make the API request with the headers\r\n      axios\r\n        .get(\"http://localhost:3001/api/profile\", { headers })\r\n        .then((response) => {\r\n          // Handle the response and set the user data in the state\r\n          this.setState({ user: response.data });\r\n          axios\r\n            .get(\"http://localhost:3001/api/posts\", { headers })\r\n            .then((postsResponse) => {\r\n              // Filter posts to get only the user's posts\r\n              const userPosts = postsResponse.data.filter(\r\n                (post) => post.user.id === response.data.user_id\r\n              );\r\n\r\n              this.setState({ userPosts });\r\n            })\r\n            .catch((error) => {\r\n              console.error(\"Error fetching user's posts:\", error);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n          // Handle any errors, e.g., unauthorized (401)\r\n          console.error(\"Error fetching user profile:\", error);\r\n        });\r\n    } else {\r\n      // Handle the case where no token is available\r\n      console.error(\"No token available. User is not authenticated.\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { user, userPosts } = this.state;\r\n\r\n    if (!user) {\r\n      return <div>Loading...</div>; // Render a loading message while fetching the profile\r\n    }\r\n\r\n    // Render the user profile information\r\n    return (\r\n      <div>\r\n        <h1>User Profile</h1>\r\n        <p>Name: {user.name}</p>\r\n        <p>Email: {user.email}</p>\r\n        <h2>User Posts</h2>\r\n        <ul>\r\n          {userPosts.map((post) => (\r\n            <li key={post.id}>{post.content}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}