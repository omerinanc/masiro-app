{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\inanc\\\\Documents\\\\GitHub\\\\omerinanc.github.io\\\\masiro\\\\src\\\\components\\\\auth\\\\profile.js\";\n// profile.js\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null // Initialize as null\n    };\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\"); // Retrieve the token from localStorage\n\n    if (token) {\n      // Set up the headers with the Bearer token\n      const headers = {\n        Authorization: `Bearer ${token}`\n      };\n\n      // Make the API request with the headers\n      axios.get(\"http://localhost:3001/api/profile\", {\n        headers\n      }).then(response => {\n        // Handle the response and set the user data in the state\n        this.setState({\n          user: response.data\n        });\n      }).catch(error => {\n        // Handle any errors, e.g., unauthorized (401)\n        console.error(\"Error fetching user profile:\", error);\n      });\n    } else {\n      // Handle the case where no token is available\n      console.error(\"No token available. User is not authenticated.\");\n    }\n  }\n  render() {\n    const {\n      user\n    } = this.state;\n    if (!user) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 14\n      }, this); // Render a loading message while fetching the profile\n    }\n\n    // Render the user profile information\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"id: \", user.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","axios","jsxDEV","_jsxDEV","Profile","constructor","props","state","user","componentDidMount","token","localStorage","getItem","headers","Authorization","get","then","response","setState","data","catch","error","console","render","children","fileName","_jsxFileName","lineNumber","columnNumber","name","id"],"sources":["C:/Users/inanc/Documents/GitHub/omerinanc.github.io/masiro/src/components/auth/profile.js"],"sourcesContent":["// profile.js\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      user: null, // Initialize as null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem(\"token\"); // Retrieve the token from localStorage\r\n\r\n    if (token) {\r\n      // Set up the headers with the Bearer token\r\n      const headers = {\r\n        Authorization: `Bearer ${token}`,\r\n      };\r\n\r\n      // Make the API request with the headers\r\n      axios\r\n        .get(\"http://localhost:3001/api/profile\", { headers })\r\n        .then((response) => {\r\n          // Handle the response and set the user data in the state\r\n          this.setState({ user: response.data });\r\n        })\r\n        .catch((error) => {\r\n          // Handle any errors, e.g., unauthorized (401)\r\n          console.error(\"Error fetching user profile:\", error);\r\n        });\r\n    } else {\r\n      // Handle the case where no token is available\r\n      console.error(\"No token available. User is not authenticated.\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.state;\r\n\r\n    if (!user) {\r\n      return <div>Loading...</div>; // Render a loading message while fetching the profile\r\n    }\r\n\r\n    // Render the user profile information\r\n    return (\r\n      <div>\r\n        <h1>User Profile</h1>\r\n        <p>Name: {user.name}</p>\r\n        <p>id: {user.id}</p>\r\n        {/* Add more user profile information here */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,MAAMC,OAAO,SAASJ,SAAS,CAAC;EAC7CK,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACXC,IAAI,EAAE,IAAI,CAAE;IACd,CAAC;EACH;;EAEAC,iBAAiBA,CAAA,EAAG;IAClB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;;IAE7C,IAAIF,KAAK,EAAE;MACT;MACA,MAAMG,OAAO,GAAG;QACdC,aAAa,EAAG,UAASJ,KAAM;MACjC,CAAC;;MAED;MACAT,KAAK,CACFc,GAAG,CAAC,mCAAmC,EAAE;QAAEF;MAAQ,CAAC,CAAC,CACrDG,IAAI,CAAEC,QAAQ,IAAK;QAClB;QACA,IAAI,CAACC,QAAQ,CAAC;UAAEV,IAAI,EAAES,QAAQ,CAACE;QAAK,CAAC,CAAC;MACxC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChB;QACAC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD,CAAC,CAAC;IACN,CAAC,MAAM;MACL;MACAC,OAAO,CAACD,KAAK,CAAC,gDAAgD,CAAC;IACjE;EACF;EAEAE,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEf;IAAK,CAAC,GAAG,IAAI,CAACD,KAAK;IAE3B,IAAI,CAACC,IAAI,EAAE;MACT,oBAAOL,OAAA;QAAAqB,QAAA,EAAK;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,CAAC,CAAC;IAChC;;IAEA;IACA,oBACEzB,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAAqB,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBzB,OAAA;QAAAqB,QAAA,GAAG,QAAM,EAAChB,IAAI,CAACqB,IAAI;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBzB,OAAA;QAAAqB,QAAA,GAAG,MAAI,EAAChB,IAAI,CAACsB,EAAE;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEjB,CAAC;EAEV;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}