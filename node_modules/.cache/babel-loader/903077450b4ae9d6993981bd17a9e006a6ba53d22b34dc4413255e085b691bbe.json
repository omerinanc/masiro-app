{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\inanc\\\\Documents\\\\GitHub\\\\omerinanc.github.io\\\\masiro\\\\src\\\\components\\\\auth\\\\profile.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userPosts: {}\n    };\n  }\n  componentDidMount() {\n    // Fetch user-specific posts based on the provided token\n    this.fetchUserPosts();\n  }\n  fetchUserPosts() {\n    const {\n      token\n    } = this.props;\n    if (token) {\n      // Make an API request to get user-specific posts\n      axios.get(\"http://localhost:3001/api/posts\") // Replace with your API endpoint\n      .then(response => {\n        // Group posts by user\n        const postsByUser = {};\n        response.data.forEach(post => {\n          const userId = post.user.id;\n          console.log(\"userId:\", userId);\n          console.log(postsByUser);\n          if (!postsByUser[userId]) {\n            postsByUser[userId] = {\n              user: post.user,\n              posts: []\n            };\n          }\n          postsByUser[userId].posts.push(post);\n        });\n        this.setState({\n          postsByUser\n        });\n      }).catch(error => {\n        console.error(\"Error fetching posts:\", error);\n      });\n    }\n  }\n  render() {\n    const {\n      userPosts\n    } = this.state;\n    const {\n      token\n    } = this.props;\n    const loggedInUserId = token ? token.userId : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-posts\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Posts:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), Object.entries(userPosts).map(([userId, userData]) =>\n        // Check if the user ID from userData matches the logged-in user's ID\n        userData.user.id === loggedInUserId && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-post-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"user-name-header\",\n            children: \"Your Posts:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: userData.posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `post-container post-${userData.user.id}-${post.id}`,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"user-post\",\n                children: post.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 25\n              }, this)\n            }, post.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this)]\n        }, userId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","axios","jsxDEV","_jsxDEV","Profile","constructor","props","state","userPosts","componentDidMount","fetchUserPosts","token","get","then","response","postsByUser","data","forEach","post","userId","user","id","console","log","posts","push","setState","catch","error","render","loggedInUserId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","userData","content"],"sources":["C:/Users/inanc/Documents/GitHub/omerinanc.github.io/masiro/src/components/auth/profile.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userPosts: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Fetch user-specific posts based on the provided token\r\n    this.fetchUserPosts();\r\n  }\r\n\r\n  fetchUserPosts() {\r\n    const { token } = this.props;\r\n\r\n    if (token) {\r\n      // Make an API request to get user-specific posts\r\n      axios\r\n        .get(\"http://localhost:3001/api/posts\") // Replace with your API endpoint\r\n        .then((response) => {\r\n          // Group posts by user\r\n          const postsByUser = {};\r\n          response.data.forEach((post) => {\r\n            const userId = post.user.id;\r\n            console.log(\"userId:\", userId);\r\n            console.log(postsByUser);\r\n\r\n            if (!postsByUser[userId]) {\r\n              postsByUser[userId] = {\r\n                user: post.user,\r\n                posts: [],\r\n              };\r\n            }\r\n\r\n            postsByUser[userId].posts.push(post);\r\n          });\r\n\r\n          this.setState({ postsByUser });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching posts:\", error);\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { userPosts } = this.state;\r\n    const { token } = this.props;\r\n\r\n    const loggedInUserId = token ? token.userId : null;\r\n\r\n    return (\r\n      <div className=\"profile-container\">\r\n        <h1>Profile</h1>\r\n        <div className=\"user-posts\">\r\n          <h2>Your Posts:</h2>\r\n          {Object.entries(userPosts).map(\r\n            ([userId, userData]) =>\r\n              // Check if the user ID from userData matches the logged-in user's ID\r\n              userData.user.id === loggedInUserId && (\r\n                <div className=\"user-post-container\" key={userId}>\r\n                  <h2 className=\"user-name-header\">Your Posts:</h2>\r\n                  <ul>\r\n                    {userData.posts.map((post) => (\r\n                      <div\r\n                        className={`post-container post-${userData.user.id}-${post.id}`}\r\n                        key={post.id}\r\n                      >\r\n                        <p className=\"user-post\">{post.content}</p>\r\n                      </div>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              )\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}