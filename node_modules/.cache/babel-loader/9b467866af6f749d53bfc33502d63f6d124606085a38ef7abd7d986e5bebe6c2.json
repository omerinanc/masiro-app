{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\inanc\\\\Documents\\\\GitHub\\\\omerinanc.github.io\\\\masiro\\\\src\\\\components\\\\auth\\\\profile.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedInStatus: \"You are not logged in.\",\n      userPosts: []\n    };\n  }\n  componentDidMount() {\n    const {\n      token\n    } = this.props;\n    console.log(\"Token from props:\", token);\n    this.fetchUserPosts();\n  }\n  fetchUserPosts() {\n    const {\n      token\n    } = this.props;\n    console.log(\"Token from props:\", token);\n\n    // Modify the URL to include the user ID as a query parameter\n    axios.get(\"http://localhost:3001/api/posts\") // Replace with your API endpoint\n    .then(response => {\n      // Group posts by user\n      const postsByUser = {};\n      response.data.forEach(post => {\n        const userId = post.user.id;\n        if (!postsByUser[userId]) {\n          postsByUser[userId] = {\n            user: post.user,\n            posts: []\n          };\n        }\n        postsByUser[userId].posts.push(post);\n      });\n      this.setState({\n        postsByUser\n      });\n    }).catch(error => {\n      console.error(\"Error fetching posts:\", error);\n    });\n  }\n  render() {\n    const {\n      postsByUser\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), Object.entries(postsByUser).map(([userId, userData]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-post-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"user-name-header\",\n          children: [\"User \", userId, \"'s Posts:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: userData.posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `post-container post-${userData.user.id}-${post.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"user-post\",\n              children: post.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this)\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, userId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","axios","jsxDEV","_jsxDEV","Profile","constructor","props","state","loggedInStatus","userPosts","componentDidMount","token","console","log","fetchUserPosts","get","then","response","postsByUser","data","forEach","post","userId","user","id","posts","push","setState","catch","error","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","userData","content"],"sources":["C:/Users/inanc/Documents/GitHub/omerinanc.github.io/masiro/src/components/auth/profile.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loggedInStatus: \"You are not logged in.\",\r\n      userPosts: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { token } = this.props;\r\n    console.log(\"Token from props:\", token);\r\n    this.fetchUserPosts();\r\n  }\r\n\r\n  fetchUserPosts() {\r\n    const { token } = this.props;\r\n    console.log(\"Token from props:\", token);\r\n\r\n    // Modify the URL to include the user ID as a query parameter\r\n    axios\r\n      .get(\"http://localhost:3001/api/posts\") // Replace with your API endpoint\r\n      .then((response) => {\r\n        // Group posts by user\r\n        const postsByUser = {};\r\n        response.data.forEach((post) => {\r\n          const userId = post.user.id;\r\n\r\n          if (!postsByUser[userId]) {\r\n            postsByUser[userId] = {\r\n              user: post.user,\r\n              posts: [],\r\n            };\r\n          }\r\n\r\n          postsByUser[userId].posts.push(post);\r\n        });\r\n\r\n        this.setState({ postsByUser });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching posts:\", error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { postsByUser } = this.state;\r\n\r\n    return (\r\n      <div className=\"profile-container\">\r\n        <h1>Profile</h1>\r\n        {Object.entries(postsByUser).map(([userId, userData]) => (\r\n          <div className=\"user-post-container\" key={userId}>\r\n            <h2 className=\"user-name-header\">User {userId}'s Posts:</h2>\r\n            <ul>\r\n              {userData.posts.map((post) => (\r\n                <div\r\n                  className={`post-container post-${userData.user.id}-${post.id}`}\r\n                  key={post.id}\r\n                >\r\n                  <p className=\"user-post\">{post.content}</p>\r\n                </div>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}