{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\inanc\\\\Documents\\\\GitHub\\\\omerinanc.github.io\\\\masiro\\\\src\\\\components\\\\auth\\\\profile.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport jwt from \"jsonwebtoken\"; // Import jsonwebtoken\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userPosts: []\n    };\n  }\n  componentDidMount() {\n    this.fetchUserPosts();\n  }\n  fetchUserPosts() {\n    const {\n      token\n    } = this.props;\n    if (token) {\n      axios.get(\"http://localhost:3001/api/posts\") // Replace with your API endpoint\n      .then(response => {\n        const secretKey = process.env.JWT_SECRET_KEY; // Use the correct variable name from your environment\n\n        try {\n          const decodedToken = jwt.verify(token, secretKey);\n          const loggedInUserId = decodedToken.userId;\n          console.log(\"Decoded user ID:\", loggedInUserId);\n\n          // Filter posts to get only the ones belonging to the logged-in user\n          const userPosts = response.data.filter(post => post.user_id === loggedInUserId);\n          this.setState({\n            userPosts\n          });\n        } catch (error) {\n          console.error(\"Error decoding token:\", error);\n        }\n      }).catch(error => {\n        console.error(\"Error fetching user posts:\", error);\n      });\n    }\n  }\n  render() {\n    const {\n      userPosts\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-posts\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Posts:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: userPosts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `post-container post-${post.user.id}-${post.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"user-post\",\n              children: post.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","axios","jwt","jsxDEV","_jsxDEV","Profile","constructor","props","state","userPosts","componentDidMount","fetchUserPosts","token","get","then","response","secretKey","process","env","JWT_SECRET_KEY","decodedToken","verify","loggedInUserId","userId","console","log","data","filter","post","user_id","setState","error","catch","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","id","content"],"sources":["C:/Users/inanc/Documents/GitHub/omerinanc.github.io/masiro/src/components/auth/profile.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport jwt from \"jsonwebtoken\"; // Import jsonwebtoken\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userPosts: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchUserPosts();\r\n  }\r\n\r\n  fetchUserPosts() {\r\n    const { token } = this.props;\r\n\r\n    if (token) {\r\n      axios\r\n        .get(\"http://localhost:3001/api/posts\") // Replace with your API endpoint\r\n        .then((response) => {\r\n          const secretKey = process.env.JWT_SECRET_KEY; // Use the correct variable name from your environment\r\n\r\n          try {\r\n            const decodedToken = jwt.verify(token, secretKey);\r\n            const loggedInUserId = decodedToken.userId;\r\n            console.log(\"Decoded user ID:\", loggedInUserId);\r\n\r\n            // Filter posts to get only the ones belonging to the logged-in user\r\n            const userPosts = response.data.filter(\r\n              (post) => post.user_id === loggedInUserId\r\n            );\r\n\r\n            this.setState({ userPosts });\r\n          } catch (error) {\r\n            console.error(\"Error decoding token:\", error);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching user posts:\", error);\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { userPosts } = this.state;\r\n\r\n    return (\r\n      <div className=\"profile-container\">\r\n        <h1>Profile</h1>\r\n        <div className=\"user-posts\">\r\n          <h2>Your Posts:</h2>\r\n          <ul>\r\n            {userPosts.map((post) => (\r\n              <div\r\n                className={`post-container post-${post.user.id}-${post.id}`}\r\n                key={post.id}\r\n              >\r\n                <p className=\"user-post\">{post.content}</p>\r\n              </div>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}